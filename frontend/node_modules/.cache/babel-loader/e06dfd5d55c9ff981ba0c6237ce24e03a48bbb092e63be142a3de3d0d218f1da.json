{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\gisApp\\\\frontend\\\\src\\\\components\\\\ResourceMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createEmojiIcon = (emoji, label, isLanding = false) => L.divIcon({\n  html: `\n      <div style=\"display: flex; flex-direction: column; align-items: center;\">\n        ${isLanding ? `<div style=\"\n                background-color: black;\n                color: white;\n                padding: 1px 4px;\n                border-radius: 4px;\n                font-size: 10px;\n                margin-bottom: 2px;\n                white-space: nowrap;\n              \">${label}</div>` : ''}\n        <div style=\"font-size: 24px;\">${emoji}</div>\n        ${!isLanding ? `<div style=\"\n                background-color: transparent;\n                color: black;\n                padding: 1px 4px;\n                font-size: 12px;\n                margin-top: -6px;\n                white-space: nowrap;\n              \">${label}</div>` : ''}\n      </div>\n    `,\n  className: 'emoji-icon',\n  iconSize: [30, 42],\n  iconAnchor: [15, 21],\n  popupAnchor: [0, -30]\n});\nconst ResourceMap = () => {\n  _s();\n  const [features, setFeatures] = useState([]);\n  useEffect(() => {\n    const fetchData = () => {\n      axios.get('http://localhost:9000/api/invasion') // או '/api/invasion' אם יש proxy\n      .then(res => setFeatures(res.data.features || [])).catch(err => console.error('Failed to fetch data:', err));\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [31.6, 34.77],\n    zoom: 11,\n    style: {\n      height: '800px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 OpenStreetMap contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), features.map((feature, idx) => {\n      const {\n        type,\n        locationName,\n        landingCode,\n        alienCode\n      } = feature.properties;\n      const coords = feature.geometry.coordinates;\n      const position = [coords[1], coords[0]];\n      if (type === 'landing') {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          icon: createEmojiIcon('🛸', `${locationName} (${landingCode})`, true),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Landing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 31\n            }, this), locationName, \" - \", landingCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, `landing-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      }\n      if (type === 'alien') {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          icon: createEmojiIcon('👽', alienCode),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Alien\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), \"Code: \", alienCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, `alien-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this);\n      }\n      return null;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ResourceMap, \"ypOwFX/TV9+PVMCBxfFaLZXumhg=\");\n_c = ResourceMap;\nexport default ResourceMap;\nvar _c;\n$RefreshReg$(_c, \"ResourceMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","L","axios","jsxDEV","_jsxDEV","createEmojiIcon","emoji","label","isLanding","divIcon","html","className","iconSize","iconAnchor","popupAnchor","ResourceMap","_s","features","setFeatures","fetchData","get","then","res","data","catch","err","console","error","interval","setInterval","clearInterval","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","feature","idx","type","locationName","landingCode","alienCode","properties","coords","geometry","coordinates","position","icon","_c","$RefreshReg$"],"sources":["C:/Users/Amos/gisApp/frontend/src/components/ResourceMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst createEmojiIcon = (emoji, label, isLanding = false) =>\r\n  L.divIcon({\r\n    html: `\r\n      <div style=\"display: flex; flex-direction: column; align-items: center;\">\r\n        ${\r\n          isLanding\r\n            ? `<div style=\"\r\n                background-color: black;\r\n                color: white;\r\n                padding: 1px 4px;\r\n                border-radius: 4px;\r\n                font-size: 10px;\r\n                margin-bottom: 2px;\r\n                white-space: nowrap;\r\n              \">${label}</div>`\r\n            : ''\r\n        }\r\n        <div style=\"font-size: 24px;\">${emoji}</div>\r\n        ${\r\n          !isLanding\r\n            ? `<div style=\"\r\n                background-color: transparent;\r\n                color: black;\r\n                padding: 1px 4px;\r\n                font-size: 12px;\r\n                margin-top: -6px;\r\n                white-space: nowrap;\r\n              \">${label}</div>`\r\n            : ''\r\n        }\r\n      </div>\r\n    `,\r\n    className: 'emoji-icon',\r\n    iconSize: [30, 42],\r\n    iconAnchor: [15, 21],\r\n    popupAnchor: [0, -30],\r\n  });\r\n\r\n\r\n\r\n\r\nconst ResourceMap = () => {\r\n  const [features, setFeatures] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .get('http://localhost:9000/api/invasion') // או '/api/invasion' אם יש proxy\r\n        .then((res) => setFeatures(res.data.features || []))\r\n        .catch((err) => console.error('Failed to fetch data:', err));\r\n    };\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer\r\n      center={[31.6, 34.77]}\r\n      zoom={11}\r\n      style={{ height: '800px', width: '100%' }}\r\n    >\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution=\"&copy; OpenStreetMap contributors\"\r\n      />\r\n\r\n      {features.map((feature, idx) => {\r\n        const { type, locationName, landingCode, alienCode } = feature.properties;\r\n        const coords = feature.geometry.coordinates;\r\n        const position = [coords[1], coords[0]];\r\n\r\n        if (type === 'landing') {\r\n          return (\r\n            <Marker\r\n              key={`landing-${idx}`}\r\n              position={position}\r\n              icon={createEmojiIcon('🛸', `${locationName} (${landingCode})`, true)}\r\n            >\r\n              <Popup>\r\n                <b>Landing</b><br />\r\n                {locationName} - {landingCode}\r\n              </Popup>\r\n            </Marker>\r\n          );\r\n        }\r\n\r\n        if (type === 'alien') {\r\n          return (\r\n            <Marker\r\n              key={`alien-${idx}`}\r\n              position={position}\r\n              icon={createEmojiIcon('👽', alienCode)}\r\n            >\r\n              <Popup>\r\n                <b>Alien</b><br />\r\n                Code: {alienCode}\r\n              </Popup>\r\n            </Marker>\r\n          );\r\n        }\r\n\r\n        return null;\r\n      })}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default ResourceMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}