{"ast":null,"code":"import booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport { point } from '@turf/helpers';\n\n/**\n * Adds 'municipality' to each alien based on spatial intersection with municipalities\n */\nexport default function assignAliensToMunicipalities(aliens, municipalities) {\n  console.log(\"🏙️ בודק שיוך חייזרים לרשויות...\");\n  return aliens.map(alien => {\n    var _match$properties;\n    const pt = point(alien.geometry.coordinates);\n    console.log(\"👽 חייזר בקואורדינטות:\", alien.geometry.coordinates);\n    const match = municipalities.features.find(muni => {\n      const inside = booleanPointInPolygon(pt, muni);\n      if (inside) {\n        console.log(\"✅ נמצא בתוך:\", muni.properties.MUN_HEB);\n      }\n      return inside;\n    });\n    if (!match) {\n      console.log(\"❌ לא נמצא בתוך אף רשות\");\n    }\n    return {\n      ...alien,\n      properties: {\n        ...alien.properties,\n        municipality: (match === null || match === void 0 ? void 0 : (_match$properties = match.properties) === null || _match$properties === void 0 ? void 0 : _match$properties.MUN_HEB) || 'לא ידוע'\n      }\n    };\n  });\n}","map":{"version":3,"names":["booleanPointInPolygon","point","assignAliensToMunicipalities","aliens","municipalities","console","log","map","alien","_match$properties","pt","geometry","coordinates","match","features","find","muni","inside","properties","MUN_HEB","municipality"],"sources":["C:/Users/Amos/Desktop/gisApp/gisApp/frontend/src/utils/assignAliensToMunicipalities.js"],"sourcesContent":["import booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport { point } from '@turf/helpers';\n\n/**\n * Adds 'municipality' to each alien based on spatial intersection with municipalities\n */\nexport default function assignAliensToMunicipalities(aliens, municipalities) {\n  console.log(\"🏙️ בודק שיוך חייזרים לרשויות...\");\n  return aliens.map(alien => {\n    const pt = point(alien.geometry.coordinates);\n    console.log(\"👽 חייזר בקואורדינטות:\", alien.geometry.coordinates);\n\n    const match = municipalities.features.find(muni => {\n      const inside = booleanPointInPolygon(pt, muni);\n      if (inside) {\n        console.log(\"✅ נמצא בתוך:\", muni.properties.MUN_HEB);\n      }\n      return inside;\n    });\n\n    if (!match) {\n      console.log(\"❌ לא נמצא בתוך אף רשות\");\n    }\n\n    return {\n      ...alien,\n      properties: {\n        ...alien.properties,\n        municipality: match?.properties?.MUN_HEB || 'לא ידוע',\n      },\n    };\n  });\n}"],"mappings":"AAAA,OAAOA,qBAAqB,MAAM,gCAAgC;AAClE,SAASC,KAAK,QAAQ,eAAe;;AAErC;AACA;AACA;AACA,eAAe,SAASC,4BAA4BA,CAACC,MAAM,EAAEC,cAAc,EAAE;EAC3EC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EAC/C,OAAOH,MAAM,CAACI,GAAG,CAACC,KAAK,IAAI;IAAA,IAAAC,iBAAA;IACzB,MAAMC,EAAE,GAAGT,KAAK,CAACO,KAAK,CAACG,QAAQ,CAACC,WAAW,CAAC;IAC5CP,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEE,KAAK,CAACG,QAAQ,CAACC,WAAW,CAAC;IAEjE,MAAMC,KAAK,GAAGT,cAAc,CAACU,QAAQ,CAACC,IAAI,CAACC,IAAI,IAAI;MACjD,MAAMC,MAAM,GAAGjB,qBAAqB,CAACU,EAAE,EAAEM,IAAI,CAAC;MAC9C,IAAIC,MAAM,EAAE;QACVZ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEU,IAAI,CAACE,UAAU,CAACC,OAAO,CAAC;MACtD;MACA,OAAOF,MAAM;IACf,CAAC,CAAC;IAEF,IAAI,CAACJ,KAAK,EAAE;MACVR,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC;IAEA,OAAO;MACL,GAAGE,KAAK;MACRU,UAAU,EAAE;QACV,GAAGV,KAAK,CAACU,UAAU;QACnBE,YAAY,EAAE,CAAAP,KAAK,aAALA,KAAK,wBAAAJ,iBAAA,GAALI,KAAK,CAAEK,UAAU,cAAAT,iBAAA,uBAAjBA,iBAAA,CAAmBU,OAAO,KAAI;MAC9C;IACF,CAAC;EACH,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}