{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\gisApp\\\\frontend\\\\src\\\\layers\\\\MainMap.js\",\n  _s = $RefreshSig$();\n// 📁 src/layers/MainMap.js\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport MunicipalitiesLayer from './MunicipalitiesLayer';\nimport InvasionLayer from './InvasionLayer';\nimport HistoricalInvasionLayer from './HistoricalInvasionLayer';\nimport LogPanel from '../components/LogPanel';\nimport localMunicipalities from '../data/municipalities.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainMap = () => {\n  _s();\n  const [showMunicipalities, setShowMunicipalities] = useState(true);\n  const [showInvasion, setShowInvasion] = useState(true);\n  const [showLog, setShowLog] = useState(false);\n  const [showHistory, setShowHistory] = useState(false);\n  const [invasionData, setInvasionData] = useState([]);\n  const [municipalities, setMunicipalities] = useState(localMunicipalities);\n  useEffect(() => {\n    const fetchInvasion = () => {\n      fetch('https://invasion-api.onrender.com/api/invasion').then(res => res.json()).then(data => setInvasionData(data.features || [])).catch(err => console.error('Error loading invasion data', err));\n    };\n    fetchInvasion();\n    const interval = setInterval(fetchInvasion, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(LogPanel, {\n      visible: showLog,\n      data: invasionData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [31.7683, 35.2137],\n      zoom: 8,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), showMunicipalities && municipalities && /*#__PURE__*/_jsxDEV(MunicipalitiesLayer, {\n        data: municipalities,\n        aliens: invasionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), showInvasion && /*#__PURE__*/_jsxDEV(InvasionLayer, {\n        data: invasionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 26\n      }, this), showHistory && /*#__PURE__*/_jsxDEV(HistoricalInvasionLayer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(MainMap, \"HX98YTePkmuoLPweTd7QwE2y/ac=\");\n_c = MainMap;\nexport default MainMap;\nvar _c;\n$RefreshReg$(_c, \"MainMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","MunicipalitiesLayer","InvasionLayer","HistoricalInvasionLayer","LogPanel","localMunicipalities","jsxDEV","_jsxDEV","MainMap","_s","showMunicipalities","setShowMunicipalities","showInvasion","setShowInvasion","showLog","setShowLog","showHistory","setShowHistory","invasionData","setInvasionData","municipalities","setMunicipalities","fetchInvasion","fetch","then","res","json","data","features","catch","err","console","error","interval","setInterval","clearInterval","style","height","width","position","children","visible","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","url","aliens","_c","$RefreshReg$"],"sources":["C:/Users/Amos/gisApp/frontend/src/layers/MainMap.js"],"sourcesContent":["// 📁 src/layers/MainMap.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport MunicipalitiesLayer from './MunicipalitiesLayer';\r\nimport InvasionLayer from './InvasionLayer';\r\nimport HistoricalInvasionLayer from './HistoricalInvasionLayer';\r\nimport LogPanel from '../components/LogPanel';\r\nimport localMunicipalities from '../data/municipalities.json';\r\n\r\n\r\nconst MainMap = () => {\r\n  const [showMunicipalities, setShowMunicipalities] = useState(true);\r\n  const [showInvasion, setShowInvasion] = useState(true);\r\n  const [showLog, setShowLog] = useState(false);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const [invasionData, setInvasionData] = useState([]);\r\n  const [municipalities, setMunicipalities] = useState(localMunicipalities);\r\n\r\n  useEffect(() => {\r\n    const fetchInvasion = () => {\r\n      fetch('https://invasion-api.onrender.com/api/invasion')\r\n        .then(res => res.json())\r\n        .then(data => setInvasionData(data.features || []))\r\n        .catch(err => console.error('Error loading invasion data', err));\r\n    };\r\n\r\n    fetchInvasion();\r\n    const interval = setInterval(fetchInvasion, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: '100%', width: '100%', position: 'relative' }}>\r\n  \r\n\r\n      <LogPanel visible={showLog} data={invasionData} />\r\n\r\n      <MapContainer center={[31.7683, 35.2137]} zoom={8} style={{ height: '100%', width: '100%' }}>\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        {showMunicipalities && municipalities && (\r\n          <MunicipalitiesLayer data={municipalities} aliens={invasionData} />\r\n        )}\r\n        {showInvasion && <InvasionLayer data={invasionData} />}\r\n        {showHistory && <HistoricalInvasionLayer />}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}