{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\gisApp\\\\gisApp\\\\frontend\\\\src\\\\layers\\\\MainMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport MunicipalitiesLayer from './MunicipalitiesLayer';\nimport InvasionLayer from './InvasionLayer';\nimport LayerToggle from './LayerToggle';\nimport Navbar from '../components/Navbar';\nimport LogPanel from '../components/LogPanel';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport '../components/Navbar.css';\nimport '../components/LogPanel.css';\nimport assignAliensToMunicipalities from '../utils/assignAliensToMunicipalities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = [31.5, 34.8];\nconst zoom = 8;\nexport default function MainMap() {\n  _s();\n  const [showMunicipalities, setShowMunicipalities] = useState(true);\n  const [showInvasion, setShowInvasion] = useState(true);\n  const [showLog, setShowLog] = useState(false);\n  const [municipalities, setMunicipalities] = useState(null);\n  const [invasionData, setInvasionData] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/municipalities').then(res => setMunicipalities(res.data)).catch(err => console.error('Failed to load municipalities', err));\n    const loadInvasion = () => {\n      axios.get('https://invasion-api.onrender.com/api/invasion').then(res => {\n        const features = res.data.features;\n        if (municipalities && municipalities.features) {\n          const aliens = features.filter(f => {\n            var _f$properties;\n            return ((_f$properties = f.properties) === null || _f$properties === void 0 ? void 0 : _f$properties.type) === 'alien';\n          });\n          const others = features.filter(f => {\n            var _f$properties2;\n            return ((_f$properties2 = f.properties) === null || _f$properties2 === void 0 ? void 0 : _f$properties2.type) !== 'alien';\n          });\n          const updatedAliens = assignAliensToMunicipalities(aliens, municipalities);\n          setInvasionData([...others, ...updatedAliens]);\n        } else {\n          setInvasionData(features);\n        }\n      }).catch(err => console.error('Failed to load invasion data', err));\n    };\n    loadInvasion();\n    const interval = setInterval(loadInvasion, 2000);\n    return () => clearInterval(interval);\n  }, [municipalities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onToggleLog: () => setShowLog(!showLog)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LayerToggle, {\n      showMunicipalities: showMunicipalities,\n      setShowMunicipalities: setShowMunicipalities,\n      showInvasion: showInvasion,\n      setShowInvasion: setShowInvasion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogPanel, {\n      visible: showLog,\n      data: invasionData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: zoom,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), showMunicipalities && municipalities && /*#__PURE__*/_jsxDEV(MunicipalitiesLayer, {\n        data: municipalities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), showInvasion && invasionData.length > 0 && /*#__PURE__*/_jsxDEV(InvasionLayer, {\n        data: invasionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(MainMap, \"O9QdUHsOcwExSfQiixBrCBKltXM=\");\n_c = MainMap;\nvar _c;\n$RefreshReg$(_c, \"MainMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","MunicipalitiesLayer","InvasionLayer","LayerToggle","Navbar","LogPanel","axios","assignAliensToMunicipalities","jsxDEV","_jsxDEV","center","zoom","MainMap","_s","showMunicipalities","setShowMunicipalities","showInvasion","setShowInvasion","showLog","setShowLog","municipalities","setMunicipalities","invasionData","setInvasionData","get","then","res","data","catch","err","console","error","loadInvasion","features","aliens","filter","f","_f$properties","properties","type","others","_f$properties2","updatedAliens","interval","setInterval","clearInterval","style","height","width","position","children","onToggleLog","fileName","_jsxFileName","lineNumber","columnNumber","visible","url","length","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/gisApp/gisApp/frontend/src/layers/MainMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer } from 'react-leaflet';\r\nimport MunicipalitiesLayer from './MunicipalitiesLayer';\r\nimport InvasionLayer from './InvasionLayer';\r\nimport LayerToggle from './LayerToggle';\r\nimport Navbar from '../components/Navbar';\r\nimport LogPanel from '../components/LogPanel';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\nimport '../components/Navbar.css';\r\nimport '../components/LogPanel.css';\r\nimport assignAliensToMunicipalities from '../utils/assignAliensToMunicipalities';\r\n\r\nconst center = [31.5, 34.8];\r\nconst zoom = 8;\r\n\r\nexport default function MainMap() {\r\n  const [showMunicipalities, setShowMunicipalities] = useState(true);\r\n  const [showInvasion, setShowInvasion] = useState(true);\r\n  const [showLog, setShowLog] = useState(false);\r\n\r\n  const [municipalities, setMunicipalities] = useState(null);\r\n  const [invasionData, setInvasionData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/municipalities')\r\n      .then(res => setMunicipalities(res.data))\r\n      .catch(err => console.error('Failed to load municipalities', err));\r\n\r\n    const loadInvasion = () => {\r\n      axios.get('https://invasion-api.onrender.com/api/invasion')\r\n        .then(res => {\r\n          const features = res.data.features;\r\n          if (municipalities && municipalities.features) {\r\n            const aliens = features.filter(f => f.properties?.type === 'alien');\r\n            const others = features.filter(f => f.properties?.type !== 'alien');\r\n            const updatedAliens = assignAliensToMunicipalities(aliens, municipalities);\r\n            setInvasionData([...others, ...updatedAliens]);\r\n          } else {\r\n            setInvasionData(features);\r\n          }\r\n        })\r\n        .catch(err => console.error('Failed to load invasion data', err));\r\n    };\r\n    loadInvasion();\r\n    const interval = setInterval(loadInvasion, 2000);\r\n    return () => clearInterval(interval);\r\n  }, [municipalities]);\r\n\r\n  return (\r\n    <div style={{ height: '100vh', width: '100%', position: 'relative' }}>\r\n      <Navbar onToggleLog={() => setShowLog(!showLog)} />\r\n      <LayerToggle\r\n        showMunicipalities={showMunicipalities}\r\n        setShowMunicipalities={setShowMunicipalities}\r\n        showInvasion={showInvasion}\r\n        setShowInvasion={setShowInvasion}\r\n      />\r\n      <LogPanel visible={showLog} data={invasionData} />\r\n      <MapContainer center={center} zoom={zoom} style={{ height: '100%', width: '100%' }}>\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        {showMunicipalities && municipalities && (\r\n          <MunicipalitiesLayer data={municipalities} />\r\n        )}\r\n        {showInvasion && invasionData.length > 0 && (\r\n          <InvasionLayer data={invasionData} />\r\n        )}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}