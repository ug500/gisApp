{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\gisApp\\\\gisApp\\\\frontend\\\\src\\\\layers\\\\InvasionLayer.js\";\nimport React from 'react';\nimport { Marker, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst alienIcon = code => L.divIcon({\n  html: `<div style=\\\"font-size:24px;\\\">ðŸ‘½<span style=\\\"color:black; font-weight:bold; font-size:14px;\\\">${code}</span></div>`,\n  className: 'alien-icon',\n  iconSize: [30, 30]\n});\nconst landingIcon = label => L.divIcon({\n  html: `<div style=\\\"display:flex; flex-direction:column; align-items:center;\\\">\n    <div style=\\\"background:black;color:white;font-size:10px;padding:1px 4px;border-radius:4px;margin-bottom:2px;\\\">${label}</div>\n    <div style=\\\"font-size:28px;\\\">ðŸ›¸</div>\n  </div>`,\n  className: 'landing-icon',\n  iconSize: [30, 42],\n  iconAnchor: [15, 21],\n  popupAnchor: [0, -30]\n});\nexport default function InvasionLayer({\n  data\n}) {\n  const landings = data.filter(f => {\n    var _f$properties;\n    return ((_f$properties = f.properties) === null || _f$properties === void 0 ? void 0 : _f$properties.type) === 'landing';\n  });\n  const aliens = data.filter(f => {\n    var _f$properties2;\n    return ((_f$properties2 = f.properties) === null || _f$properties2 === void 0 ? void 0 : _f$properties2.type) === 'alien';\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [landings.map((l, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [l.geometry.coordinates[1], l.geometry.coordinates[0]],\n      icon: landingIcon(l.properties.landingCode || '?')\n    }, `landing-${idx}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)), aliens.map((a, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [a.geometry.coordinates[1], a.geometry.coordinates[0]],\n      icon: alienIcon(a.properties.alienCode || '?')\n    }, `alien-${idx}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c = InvasionLayer;\nvar _c;\n$RefreshReg$(_c, \"InvasionLayer\");","map":{"version":3,"names":["React","Marker","Polyline","L","jsxDEV","_jsxDEV","Fragment","_Fragment","alienIcon","code","divIcon","html","className","iconSize","landingIcon","label","iconAnchor","popupAnchor","InvasionLayer","data","landings","filter","f","_f$properties","properties","type","aliens","_f$properties2","children","map","l","idx","position","geometry","coordinates","icon","landingCode","fileName","_jsxFileName","lineNumber","columnNumber","a","alienCode","_c","$RefreshReg$"],"sources":["C:/Users/Amos/Desktop/gisApp/gisApp/frontend/src/layers/InvasionLayer.js"],"sourcesContent":["import React from 'react';\r\nimport { Marker, Polyline } from 'react-leaflet';\r\nimport L from 'leaflet';\r\n\r\nconst alienIcon = (code) => L.divIcon({\r\n  html: `<div style=\\\"font-size:24px;\\\">ðŸ‘½<span style=\\\"color:black; font-weight:bold; font-size:14px;\\\">${code}</span></div>`,\r\n  className: 'alien-icon',\r\n  iconSize: [30, 30]\r\n});\r\n\r\nconst landingIcon = (label) => L.divIcon({\r\n  html: `<div style=\\\"display:flex; flex-direction:column; align-items:center;\\\">\r\n    <div style=\\\"background:black;color:white;font-size:10px;padding:1px 4px;border-radius:4px;margin-bottom:2px;\\\">${label}</div>\r\n    <div style=\\\"font-size:28px;\\\">ðŸ›¸</div>\r\n  </div>`,\r\n  className: 'landing-icon',\r\n  iconSize: [30, 42],\r\n  iconAnchor: [15, 21],\r\n  popupAnchor: [0, -30]\r\n});\r\n\r\nexport default function InvasionLayer({ data }) {\r\n  const landings = data.filter(f => f.properties?.type === 'landing');\r\n  const aliens = data.filter(f => f.properties?.type === 'alien');\r\n\r\n  return (\r\n    <>\r\n      {landings.map((l, idx) => (\r\n        <Marker\r\n          key={`landing-${idx}`}\r\n          position={[l.geometry.coordinates[1], l.geometry.coordinates[0]]}\r\n          icon={landingIcon(l.properties.landingCode || '?')}\r\n        />\r\n      ))}\r\n\r\n      {aliens.map((a, idx) => (\r\n        <Marker\r\n          key={`alien-${idx}`}\r\n          position={[a.geometry.coordinates[1], a.geometry.coordinates[0]]}\r\n          icon={alienIcon(a.properties.alienCode || '?')}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AAChD,OAAOC,CAAC,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,SAAS,GAAIC,IAAI,IAAKN,CAAC,CAACO,OAAO,CAAC;EACpCC,IAAI,EAAE,mGAAmGF,IAAI,eAAe;EAC5HG,SAAS,EAAE,YAAY;EACvBC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;AACnB,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAIC,KAAK,IAAKZ,CAAC,CAACO,OAAO,CAAC;EACvCC,IAAI,EAAE;AACR,sHAAsHI,KAAK;AAC3H;AACA,SAAS;EACPH,SAAS,EAAE,cAAc;EACzBC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBG,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;AAEF,eAAe,SAASC,aAAaA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC9C,MAAMC,QAAQ,GAAGD,IAAI,CAACE,MAAM,CAACC,CAAC;IAAA,IAAAC,aAAA;IAAA,OAAI,EAAAA,aAAA,GAAAD,CAAC,CAACE,UAAU,cAAAD,aAAA,uBAAZA,aAAA,CAAcE,IAAI,MAAK,SAAS;EAAA,EAAC;EACnE,MAAMC,MAAM,GAAGP,IAAI,CAACE,MAAM,CAACC,CAAC;IAAA,IAAAK,cAAA;IAAA,OAAI,EAAAA,cAAA,GAAAL,CAAC,CAACE,UAAU,cAAAG,cAAA,uBAAZA,cAAA,CAAcF,IAAI,MAAK,OAAO;EAAA,EAAC;EAE/D,oBACEpB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,GACGR,QAAQ,CAACS,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,kBACnB1B,OAAA,CAACJ,MAAM;MAEL+B,QAAQ,EAAE,CAACF,CAAC,CAACG,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,EAAEJ,CAAC,CAACG,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAAE;MACjEC,IAAI,EAAErB,WAAW,CAACgB,CAAC,CAACN,UAAU,CAACY,WAAW,IAAI,GAAG;IAAE,GAF9C,WAAWL,GAAG,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGtB,CACF,CAAC,EAEDd,MAAM,CAACG,GAAG,CAAC,CAACY,CAAC,EAAEV,GAAG,kBACjB1B,OAAA,CAACJ,MAAM;MAEL+B,QAAQ,EAAE,CAACS,CAAC,CAACR,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,EAAEO,CAAC,CAACR,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAAE;MACjEC,IAAI,EAAE3B,SAAS,CAACiC,CAAC,CAACjB,UAAU,CAACkB,SAAS,IAAI,GAAG;IAAE,GAF1C,SAASX,GAAG,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGpB,CACF,CAAC;EAAA,eACF,CAAC;AAEP;AAACG,EAAA,GAvBuBzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}